/**
 * Definition for singly-linked list.
 * class ListNode {
 *     val: number
 *     next: ListNode | null
 *     constructor(val?: number, next?: ListNode | null) {
 *         this.val = (val===undefined ? 0 : val)
 *         this.next = (next===undefined ? null : next)
 *     }
 * }
 */

function detectCycle(head: ListNode | null): ListNode | null {
    let currentNode = head;
    let seenNodes = new Set<ListNode>()

    while(!seenNodes.has(currentNode)){

        if (currentNode.next === null){
            return null;
        }
        seenNodes.add(currentNode);
        currentNode = currentNode.next;
    }

    return currentNode;
}

//runtime_error:        if (currentNode.next === null){
                        ^
TypeError: Cannot read property 'next' of null
    Line 19: Char 25 in solution.ts (detectCycle)
    Line 50: Char 22 in solution.ts (Object.<anonymous>)
    Line 16: Char 8 in runner.js (Object.runner)
    Line 29: Char 26 in solution.ts (Object.<anonymous>)
    Line 1251: Char 30 in loader.js (Module._compile)
    Line 1272: Char 10 in loader.js (Object.Module._extensions..js)
    Line 1100: Char 32 in loader.js (Module.load)
    Line 962: Char 14 in loader.js (Function.Module._load)
    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)
    Line 17: Char 47 in run_main_module.js
//last_testcase:[] -1
